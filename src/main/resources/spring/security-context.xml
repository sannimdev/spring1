<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

	<context:component-scan
		base-package="com.spring1" />

	<!-- 권한이 없는 페이지를 접근할 경우 접근 불가 메시지 출력 -->
	<http auto-config="true">
		<!-- spring 4.x때 추가된 옵션으로 ssl을 사용하지 않을 경우 csrf는 disalbed=true로 설정. -->
		<csrf disabled="true" />
		<!-- 모든 유저 접근 -->
		<intercept-url pattern="/member/login" access="permitAll"/>
		<!-- 기타 페이지 -->
		<intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
		
		<form-login 
			login-page="/member/login"
			login-processing-url="/member/login"
			username-parameter="memberId" 
			password-parameter="password"
			authentication-failure-url="/member/login/error"
			default-target-url="/" 
			always-use-default-target="false"
			authentication-success-handler-ref="loginSuccessHandler" />
		<logout logout-url="/member/logout" 
			logout-success-url="/"
			invalidate-session="true" />
			
		<!-- 접근 권한이 없을 때 -->
		<access-denied-handler error-page="/member/noAuthorized"/>
	</http>
	
	<beans:bean id="loginSuccessHandler" class="com.spring1.security.LoginSuccessHandler"/>

	<jdbc-user-service 
		data-source-ref="dataSource"
		id="jdbcUserService"
		users-by-username-query="SELECT memberId AS username, password, available AS enabled FROM member_detail WHERE memberId=?"
		authorities-by-username-query="SELECT memberId AS username, authority FROM member_authority WHERE memberId=?" />
	
	<!-- DB 연동 -->
	<authentication-manager>
		<authentication-provider user-service-ref="jdbcUserService">
			<!-- 로그인 할 때마다 비번 암호화 -->
			<!-- <password-encoder ref="bcryptEncoder"/> -->
		</authentication-provider>
	</authentication-manager>
	
	<!-- 패스워드 암호화에 특화된 password hashing function -->
	<!-- <beans:bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/> -->
	
</beans:beans>
